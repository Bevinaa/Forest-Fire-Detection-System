# -*- coding: utf-8 -*-
"""MLmodel.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LY0sEIAnEBujtxTfZWUBzHSxUW27wEca
"""

import pandas as pd
import numpy as np
import joblib
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
df = pd.read_csv("synthetic_fire_dataset.csv")

# Define features and target
X = df[['Temperature', 'Humidity', 'Smoke']]
y = df['Fire']

scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42, stratify=y)

# Train RandomForest model
model = RandomForestClassifier(n_estimators=300, max_depth=6, random_state=42)
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
report = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy:.4f}")
print("Classification Report:\n", report)

# Save the trained model and scaler
joblib.dump(model, "fire_detection_model.pkl")
joblib.dump(scaler, "scaler.pkl")

test_values = [
    (25, 50),  # No fire expected
    (40, 20),  # Likely fire
    (35, 25),  # Possible fire
    (30, 40)   # No fire
]

for temp, hum in test_values:
    features = np.array([[temp, hum]])
    fire_prediction = model.predict(features)[0]
    print(f"Temp: {temp}, Humidity: {hum} â†’ Fire Prediction: {fire_prediction}")

print(df["Fire Alarm"].value_counts())